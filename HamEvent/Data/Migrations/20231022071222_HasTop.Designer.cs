// <auto-generated />
using System;
using HamEvent.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HamEvent.Data.Migrations
{
    [DbContext(typeof(HamEventContext))]
    [Migration("20231022071222_HasTop")]
    partial class HasTop
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("HamEvent.Data.Model.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Diploma")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasTop")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SecretKey")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("83eeb505-05cb-4b1f-be77-0973e001c634"),
                            Description = "YP20KQT Event",
                            Diploma = "<STYLE type=\"text/css\">\r\n    html, body {\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    h1 {\r\n        text-align: center;\r\n        font-size: xx-large;\r\n        margin-bottom: 20px;\r\n    }\r\n  h2 {\r\n        text-align: center;\r\n        font-size: x-large;\r\n        margin-top: 20px;\r\n        margin-bottom: 10px;\r\n    }\r\n    h3 {\r\n        text-align: center;\r\n        font-size: large;\r\n        margin-top: 20px;\r\n        margin-bottom: 10px;\r\n    }\r\n    .background {\r\n        background-image: url(https://hamevent.brudiu.ro/static/YP20KQT.jpg);\r\n        width: 842px;\r\n        height: 595px;\r\n        margin: 0;\r\n        padding: 0;\r\n        background-position: center center;\r\n        background-size: 100%;\r\n        background-repeat: no-repeat;\r\n        position: relative;\r\n    }\r\n\r\n    .diploma {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        -ms-transform: translate(-50%, -50%);\r\n        transform: translate(-50%, -50%);\r\n        margin: 0 auto;\r\n        padding: 30px;\r\n    }\r\n.callsign{\r\n    position: absolute;\r\n        top: 240px;\r\n        left: 35%;\r\n    transform: translate(-50%, 0);\r\n}\r\n.Timestamp{\r\n    position: absolute;\r\n        top: 485px;\r\n        left: 50%;\r\n    transform: translate(-50%, 0);\r\n}\r\n.Rank{\r\n    position: absolute;\r\n        top: 240px;\r\n        left: 610px;\r\n    transform: translate(-50%, 0);\r\n}\r\n.Points{\r\n    position: absolute;\r\n        top: 357px;\r\n        left: 232px;\r\n    transform: translate(-50%, 0);\r\n}\r\n.QSOs{\r\n    position: absolute;\r\n        top: 357px;\r\n        left: 358px;\r\n    transform: translate(-50%, 0);\r\n}\r\n.Bands{\r\n    position: absolute;\r\n        top: 357px;\r\n        left: 484px;\r\n    transform: translate(-50%, 0);\r\n}\r\n.Modes{\r\n    position: absolute;\r\n        top: 357px;\r\n        left: 610px;\r\n    transform: translate(-50%, 0);\r\n}\r\n</STYLE>\r\n<html>\r\n<body>\r\n    <div class=\"background\">\r\n<div class=\"callsign\"><h1>--callsign2--</h2></div>\r\n<div class=\"Points\"><h3>--Points--</h3></div>\r\n<div class=\"QSOs\"><h3>--QSOs--</h3></div>\r\n<div class=\"Bands\"><h3>--Bands--</h3></div>\r\n<div class=\"Modes\"><h3>--Modes--</h3></div>\r\n<div class=\"Rank\"><h2>--Rank--</h2></div>\r\n<div class=\"Timestamp\"><h3>--Timestamp--</h3></div>       \r\n    </div>\r\n</body>\r\n</html>",
                            EndDate = new DateTime(2023, 12, 31, 23, 59, 59, 0, DateTimeKind.Utc),
                            HasTop = true,
                            Name = "YP20KQT",
                            SecretKey = new Guid("dfb313dc-b5df-4597-8751-95831c93ed53"),
                            StartDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("E7AE6452-1D55-4989-9879-22E4F02E78FA"),
                            Description = "YP100UPT is a special event on the Open Campus Night, part of the European Researchers Night project. This event is supported by Politehnica University Timisoara, Faculty of Electronics Telecommunications and Information Technologies, Measurements and Optoelectronics Department in partenership with QSO Banat Timisoara (YO2KQT) radio ham club.",
                            Diploma = "<STYLE type=\"text/css\">\r\n    html, body {\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    h1 {\r\n        text-align: center;\r\n        font-size: xx-large;\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    .background {\r\n        background-image: url(https://hamevent.brudiu.ro/static/YP100UPT.jpg);\r\n        width: 842px;\r\n        height: 595px;\r\n        margin: 0;\r\n        padding: 0;\r\n        background-position: center center;\r\n        background-size: 100%;\r\n        background-repeat: no-repeat;\r\n        position: relative;\r\n    }\r\n\r\n    .diploma {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        -ms-transform: translate(-50%, -50%);\r\n        transform: translate(-50%, -50%);\r\n        margin: 0 auto;\r\n        padding: 30px;\r\n    }\r\n.callsign{\r\n    position: absolute;\r\n        top: 280px;\r\n        left: 68%;\r\n    transform: translate(-50%, 0);\r\n}\r\n\r\n</STYLE>\r\n<html>\r\n<body>\r\n    <div class=\"background\">\r\n<div class=\"callsign\"><h1>--callsign2--</h2></div>\r\n      \r\n    </div>\r\n</body>\r\n</html>",
                            EndDate = new DateTime(2023, 9, 29, 23, 59, 59, 0, DateTimeKind.Utc),
                            HasTop = false,
                            Name = "YP100UPT",
                            SecretKey = new Guid("4df2facf-4d0b-459c-b6e6-f152caf62adb"),
                            StartDate = new DateTime(2023, 9, 29, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("HamEvent.Data.Model.QSO", b =>
                {
                    b.Property<string>("Callsign1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Callsign2")
                        .HasColumnType("TEXT");

                    b.Property<string>("Band")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mode")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EventId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RST1")
                        .HasColumnType("TEXT");

                    b.Property<string>("RST2")
                        .HasColumnType("TEXT");

                    b.HasKey("Callsign1", "Callsign2", "Band", "Mode", "Timestamp", "EventId");

                    b.HasIndex("EventId");

                    b.ToTable("QSOs");
                });

            modelBuilder.Entity("HamEvent.Data.Model.QSO", b =>
                {
                    b.HasOne("HamEvent.Data.Model.Event", "Event")
                        .WithMany("QSOs")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("HamEvent.Data.Model.Event", b =>
                {
                    b.Navigation("QSOs");
                });
#pragma warning restore 612, 618
        }
    }
}
